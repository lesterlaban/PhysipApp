<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
        xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
        x:Class="PhysipApp.Views.ConsultaPage"
        xmlns:local="clr-namespace:PhysipApp.ViewModels"  
        xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
        xmlns:modelCalendar="clr-namespace:PhysipApp.Models.Calendar"
        xmlns:model="clr-namespace:PhysipApp.Models"
        xmlns:xcConverters="clr-namespace:XCalendar.Forms.Converters;assembly=XCalendar.Forms"
        xmlns:xc="clr-namespace:XCalendar.Forms.Views;assembly=XCalendar.Forms"
        x:Name="This"
        Title="{Binding Title}">

    <ContentPage.Resources> 
        <!--  Limits a string to a certain amount of characters  -->
        <xcConverters:StringCharLimitConverter x:Key="StringCharLimitConverter"/>
        <!--  Returns true if all bindings evaluate to true  -->
        <xct:VariableMultiValueConverter x:Key="AllTrueConverter" ConditionType="All"/>
        <!--  Inverts a binded boolean value  -->
        <xct:InvertedBoolConverter x:Key="InvertedBoolConverter"/>
        <!--  Inverts a binded boolean value  -->
    </ContentPage.Resources>
    
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Cerrar Sesión" Command="{Binding CerrarCommand}" />
    </ContentPage.ToolbarItems>
    
    <ScrollView>
        <StackLayout Spacing="20" Padding="15">
            <Grid Padding="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*" />
                    <ColumnDefinition Width="50*" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" VerticalOptions="Center" Text="Nueva Consulta" Command="{Binding AddItemCommand}" />
                <Button Grid.Column="1" VerticalOptions="Center" Text="Buscar" Command="{Binding Buscar}" />
            </Grid>

            <xc:CalendarView
                x:Name="MainCalendarView"
                NavigationBackgroundColor="{StaticResource Primary}"
                DayNameTextColor="{StaticResource Primary}"
                Days="{Binding EventCalendar.Days}"
                DaysOfWeek="{Binding EventCalendar.DayNamesOrder}" 
                ForwardsArrowCommand="{Binding NavigateCalendarCommand}"
                ForwardsArrowCommandParameter="{Binding EventCalendar.ForwardsNavigationAmount}"
                BackwardsArrowCommand="{Binding NavigateCalendarBackCommand}"
                BackwardsArrowCommandParameter="{Binding EventCalendar.BackwardsNavigationAmount}"
                NavigatedDate="{Binding EventCalendar.NavigatedDate}">
                <xc:CalendarView.DayTemplate>
                    <DataTemplate x:DataType="modelCalendar:EventDay">
                        <!--  ContentView so that the margin is respected by the MonthView  -->
                        <ContentView>
                            <xc:CalendarDayView           
                                Margin="2.5"
                                HeightRequest="41"
                                DateTime="{Binding DateTime}"
                                IsCurrentMonth="{Binding IsCurrentMonth}"
                                IsToday="{Binding IsToday}"
                                SelectedBackgroundColor="{StaticResource Primary}"
                                IsSelected="{Binding IsSelected}"
                                IsInvalid="{Binding IsInvalid}"
                                CurrentMonthCommand="{Binding BindingContext.ChangeDateSelectionCommand, Source={x:Reference This}}"
                                CurrentMonthCommandParameter="{Binding DateTime}"
                                TodayCommand="{Binding BindingContext.ChangeDateSelectionCommand, Source={x:Reference This}}"
                                TodayCommandParameter="{Binding DateTime}"
                                SelectedCommand="{Binding BindingContext.ChangeDateSelectionCommand, Source={x:Reference This}}"
                                SelectedCommandParameter="{Binding DateTime}">

                                <xc:CalendarDayView.ControlTemplate>
                                    <ControlTemplate>
                                        <!--  Using a Grid to stack views on the z axis  -->
                                        <!--  TemplatedParent refers to the view that the ControlTemplate resides in  -->
                                        <Grid RowSpacing="2" BindingContext="{Binding BindingContext, Source={RelativeSource TemplatedParent}}">

                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="1.5*"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <!--  ContentPresenter displays the default content for the control  -->
                                            <ContentPresenter
                                                Grid.Row="0"
                                                Grid.RowSpan="2"
                                                VerticalOptions="Center"/>

                                            <!--  TemplatedParent refers to the view that the ControlTemplate resides in  -->
                                            <StackLayout
                                                Grid.Row="1"
                                                HorizontalOptions="Center"
                                                Orientation="Horizontal"
                                                Spacing="2.5"
                                                BindableLayout.ItemsSource="{Binding Events}">

                                                <!--  I want the event indicators to only be visible when the DateTime is in the currently navigated month  -->
                                                <StackLayout.IsVisible>
                                                    <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                                        <Binding Path="IsCurrentMonth"/>
                                                        <Binding  Converter="{StaticResource InvertedBoolConverter}"
                                                            Path="IsInvalid"/>
                                                    </MultiBinding>
                                                </StackLayout.IsVisible>

                                                <BindableLayout.ItemTemplate>
                                                    <DataTemplate x:DataType="modelCalendar:Event">
                                                        <BoxView
                                                            CornerRadius="100"
                                                            HeightRequest="7"
                                                            HorizontalOptions="CenterAndExpand"
                                                            VerticalOptions="Center"
                                                            WidthRequest="7"
                                                            Color="{Binding Color}"/>
                                                    </DataTemplate>
                                                </BindableLayout.ItemTemplate>

                                            </StackLayout>

                                        </Grid>
                                    </ControlTemplate>
                                </xc:CalendarDayView.ControlTemplate>

                            </xc:CalendarDayView>
                        </ContentView>
                    </DataTemplate>
                </xc:CalendarView.DayTemplate>
            </xc:CalendarView>

            <Label Text="RESULTADOS : " 
                LineBreakMode="NoWrap" 
                TextColor="{StaticResource Primary}"
                Style="{DynamicResource ListItemTextStyle}" 
                FontSize="20" />
            <CollectionView x:Name="ItemsListView"
                ItemsSource="{Binding Items}">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <StackLayout Padding="10" x:DataType="model:RegistroConsulta">
                            <Label Text="{Binding DescripcionZona}" LineBreakMode="NoWrap" FontSize="18" Style="{DynamicResource ListItemTextStyle}" TextColor="{StaticResource Primary}" />
                            <Label Text="{Binding DescripcionNivel}" LineBreakMode="NoWrap" FontSize="18" Style="{DynamicResource ListItemDetailTextStyle}" TextColor="{StaticResource Primary}"/>
                            <Label Text="{Binding DescripcionFecha}" LineBreakMode="NoWrap" FontSize="17" Style="{DynamicResource ListItemDetailTextStyle}"/>
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer NumberOfTapsRequired="1" CommandParameter="{Binding .}" Command="{Binding Source={RelativeSource AncestorType={x:Type local:ConsultaViewModel}}, Path=ItemTapped}" >
                                </TapGestureRecognizer>
                            </StackLayout.GestureRecognizers>
                        </StackLayout>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </StackLayout>
        
        
    </ScrollView>
</ContentPage>